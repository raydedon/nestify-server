---
openapi: 3.0.0
info:
    title: marriage mate
    description: The API for the matrimonial website
    version: 1.0.0
servers:
    - url: http://localhost:5003
      description: SwaggerHub API Auto Mocking
paths:
    /login:
        post:
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                phoneNumber: 
                                    type: string
                            required:
                                - phoneNumber
            responses:
                "200":
                    description: OTP Sent with requestId
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: OTP sent successfully
    /auth:
        post:
            parameters:
                - name: otp
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: string
                - name: requestId
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Authenticated
                "401":
                    description: Not authenticated
    /profile:
        post:
            parameters:
                - name: name
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: string
                - name: dob
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: string
                - name: gender
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: string
                - name: userType
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: string
            responses:
                "201":
                    description: Profile saved
    /users:
        get:
            parameters:
                - name: gender
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: string
                - name: city
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: string
                - name: domain
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: string
                - name: nativeCity
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: string
                - name: cast
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: string
                - name: religion
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: string
                - name: offset
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: integer
                - name: limit
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: integer
            responses:
                "200":
                    description: list of profiles
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/User"
    /users/{id}:
        get:
            parameters:
                - name: id
                  in: path
                  required: true
                  style: simple
                  explode: false
                  schema:
                      type: string
            responses:
                "200":
                    description: profile details
    /availability/{id}:
        get:
            parameters:
                - name: id
                  in: path
                  required: true
                  style: simple
                  explode: false
                  schema:
                      type: string
            responses:
                "200":
                    description: JSON representing availability
    /bookings/{type}:
        post:
            parameters:
                - name: type
                  in: path
                  required: true
                  style: simple
                  explode: false
                  schema:
                      type: string
                - name: id
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: string
                - name: slotStartTime
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: string
            responses:
                "201":
                    description: transactionId
    /bookings/status/{transactionId}:
        get:
            parameters:
                - name: transactionId
                  in: path
                  required: true
                  style: simple
                  explode: false
                  schema:
                      type: string
            responses:
                "200":
                    description: payment status
    /bookings:
        get:
            parameters:
                - name: offset
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: integer
                - name: limit
                  in: query
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: integer
            responses:
                "200":
                    description: JSON with booking details in list. We will show 1 message at a time for type=dm
components:
    schemas:
        PhoneNumber:
            type: string
            description: the unique identifier for the zone
        User:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                name:
                    type: string
                email:
                    type: string
                    format: email
                email_verified:
                    type: boolean
                phoneNumber:
                    type: string
                phoneNumberVerified:
                    type: boolean
                gender:
                    type: string
                    enum: [male, female, other]
                dob:
                    type: string
                    format: date
                current_city:
                    type: string
                createdAt:
                    type: string
                    format: date-time
            required:
                - phoneNumber
            description: represents a User

        TemperatureSummary:
            type: object
            properties:
                zones:
                    type: array
                    items:
                        $ref: "#/components/schemas/TemperatureZone"
                zoneStatus:
                    type: array
                    items:
                        $ref: "#/components/schemas/TemperatueZoneStatus"
            description: ok
        TemperatureZone:
            required:
                - id
                - name
            type: object
            properties:
                id:
                    type: integer
                    description: the unique identifier for the zone
                    format: int32
                name:
                    type: string
                inputPosition:
                    type: integer
                    format: int32
                outputPosition:
                    type: integer
                    format: int32
                zone:
                    type: string
            description: a single temperature zone
        TemperatueZoneStatus:
            required:
                - id
                - timestamp
                - value
            type: object
            properties:
                id:
                    type: string
                    description: the unique identifier for the zone
                name:
                    type: string
                    description: the name of the zone
                value:
                    type: number
                    description: the temperature in the zone
                    format: double
                units:
                    type: string
                    description: the temperature units
                    default: fahrenheit
                    enum:
                        - celsius
                        - fahrenheit
                timestamp:
                    type: string
                    description: the timestamp when the temperature was measured
                    format: date-time
            description: status of a single zone
        ApiResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                    example: everything is ok
        HeaterState:
            type: object
            properties:
                id:
                    type: string
                state:
                    type: string
        DeviceState:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                lastUpdate:
                    type: string
                    format: date-time
                level:
                    type: integer
                    format: int32
        ForecastResponse:
            type: object
            properties:
                city:
                    $ref: "#/components/schemas/City"
                values:
                    type: array
                    items:
                        $ref: "#/components/schemas/Forecast"
        Forecast:
            type: object
            properties:
                date:
                    type: string
                    format: date-time
                pressure:
                    type: number
                    format: double
                humidity:
                    type: integer
                    format: int32
                windSpeed:
                    type: number
                    format: double
                clouds:
                    type: integer
                    format: int32
                temperature:
                    $ref: "#/components/schemas/ForecastTemperature"
                weather:
                    $ref: "#/components/schemas/WeatherForecast"
        City:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
                lat:
                    type: number
                    format: double
                lon:
                    type: number
                    format: double
                country:
                    type: string
        ForecastTemperature:
            type: object
            properties:
                low:
                    type: number
                    format: double
                high:
                    type: number
                    format: double
                morning:
                    type: number
                    format: double
                day:
                    type: number
                    format: double
                evening:
                    type: number
                    format: double
                night:
                    type: number
                    format: double
        WeatherForecast:
            type: object
            properties:
                summary:
                    type: string
                description:
                    type: string
                icon:
                    type: string
        DeviceRegistrationInfo:
            type: object
            properties:
                uri:
                    type: string
                    format: uri
                    example: http://10.0.0.220:8080
                id:
                    type: string
                    format: uuid
                    example: 0729a580-2240-11e6-9eb5-0002a5d5c51b
